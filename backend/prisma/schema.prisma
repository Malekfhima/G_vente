// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  nom       String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ventes    Vente[]
}

model Produit {
  id               Int          @id @default(autoincrement())
  nom              String       @unique
  description      String?
  reference        String?      @unique
  codeBarre        String?      @unique
  prixAchatHT      Float?
  prix             Float        @default(0)
  prixVenteTTC     Float        @default(0)
  tauxTVA          Float? // en pourcentage, ex: 19
  stock            Int          @default(0)
  categorie        String?
  categorieId      Int?
  categorieRef     Categorie?   @relation(fields: [categorieId], references: [id], onDelete: SetNull)
  isService        Boolean      @default(false)
  seuilAlerteStock Int?         @default(0)
  fournisseurId    Int?
  fournisseur      Fournisseur? @relation(fields: [fournisseurId], references: [id], onDelete: SetNull)
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  ventes           Vente[]
}

model Categorie {
  id          Int       @id @default(autoincrement())
  nom         String    @unique
  description String?
  produits    Produit[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Zone {
  id           Int           @id @default(autoincrement())
  nom          String        @unique
  description  String?
  adresse      String?
  ville        String?
  codePostal   String?
  pays         String        @default("Tunisie")
  actif        Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  ventes       Vente[]
  clients      Client[]
  fournisseurs Fournisseur[]
}

model Vente {
  id            Int      @id @default(autoincrement())
  quantite      Int
  prixTotal     Float
  date          DateTime @default(now())
  userId        Int
  produitId     Int
  zoneId        Int?
  transactionId String   @default(cuid())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  produit       Produit  @relation(fields: [produitId], references: [id], onDelete: Cascade)
  zone          Zone?    @relation(fields: [zoneId], references: [id], onDelete: SetNull)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
  @@index([produitId])
  @@index([zoneId])
  @@index([transactionId])
}

/// Compteur de tickets par jour (réinitialisé chaque nouvelle journée)
model TicketCounter {
  id        Int      @id @default(autoincrement())
  date      String   @unique // format YYYY-MM-DD
  count     Int      @default(0)
  updatedAt DateTime @updatedAt
}

model Client {
  id        Int      @id @default(autoincrement())
  nom       String
  email     String?  @unique
  telephone String?
  adresse   String?
  zoneId    Int?
  zone      Zone?    @relation(fields: [zoneId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fournisseur {
  id        Int       @id @default(autoincrement())
  nom       String
  email     String?   @unique
  telephone String?
  adresse   String?
  zoneId    Int?
  zone      Zone?     @relation(fields: [zoneId], references: [id], onDelete: SetNull)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  produits  Produit[]
}
