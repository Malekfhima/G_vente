version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: gestion_vente_db
    environment:
      POSTGRES_DB: gestion_vente
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gestion_vente_network

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gestion_vente_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gestion_vente
      JWT_SECRET: votre_secret_jwt_tres_securise_ici
      PORT: 5000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - gestion_vente_network
    restart: unless-stopped

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gestion_vente_frontend
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - gestion_vente_network
    restart: unless-stopped

  # Nginx (optionnel - pour la production)
  nginx:
    image: nginx:alpine
    container_name: gestion_vente_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - gestion_vente_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  gestion_vente_network:
    driver: bridge

